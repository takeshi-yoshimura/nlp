"ref.cve","cve-[0-9]+-[0-9]+"
"ref.linux.bugzilla","http(s)*://bugzilla\.kernel\.org/show_bug\.cgi\?id=[0-9]+"
"linux.oops.null","bug: unable to handle kernel null pointer dereference at"
"linux.oops.pagefault","bug: unable to handle kernel paging request at"
"linux.oops.assert","kernel bug at"
"linux.oops.generalprotection","general protection fault:"
"linux.warn.lockdep","info: possible circular locking dependency detected"
"linux.newdev","add support for|quirk"
"linux.feature.page","page"
"linux.feature.xattr","xattr"
"linux.feature.io","io"
"prog.numtype","\s+(int|long|short|char|double|float|void)\s"
"prog.func","[a-z][0-9a-z_]*\([^\(\)]*\)"
"prog.bit","bit mask"
"prog.endian","endian"
"prog.cast","cast"
"prog.align","alignment|padding"
"bug.error.check","check(s|ed)* (null|error)"
"bug.error.return","(wrong|incorrect) (return|error) (code|value)"
"prog.path.error","(error|failure) path"
"prog.path.exit","exit"
"bug.memory.null","null (pointer )*deref|check .*null"
"bug.memory.init","uninitial|miss(ing)* initial"
"bug.memory.overflow","(buffer|array) (ov|und)er(flow|run)"
"bug.memory.dangling","use[- ]after[- ]free|dangling"
"bug.memory.doublefree","double free"
"bug.memory.leak","leak|miss(ing)* (k|v)*free"
"bug.memory.boundary","(index[- ])*out[- ]of[- ]bound[s]*|off[- ]by[- ]one[- ]|integer overflow|string termination"
"bug.concurrency.race","[^tg]rac(e|y|ing)|miss(ing)* [^(un)]*lock"
"bug.concurrency.missunlock","miss(ing)* .*unlock"
"bug.concurrency.doubleunlock","double .*unlock"
"bug.concurrency.deadlock","deadlock"
"bug.concurrency.wronglock","(wrong|fix) \w*lock"
"bug.concurrency.sleepinatomic","sleep in atomic"
"gen.conseq.crash","crash|oops|hang|infinite loop"
"gen.conseq.corruption","data corruption"
"gen.conseq.infoleak","info(rmation)* leak(age)*"
#add like: "A.B.C","regex (java format)"
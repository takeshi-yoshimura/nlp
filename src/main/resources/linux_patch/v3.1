--- linux.old/arch/x86/Makefile	2014-05-28 22:57:32.195989771 +0900
+++ linux/arch/x86/Makefile	2014-05-28 22:57:50.187392440 +0900
@@ -69,7 +69,7 @@
 
         # this works around some issues with generating unwind tables in older gccs
         # newer gccs do it by default
-        KBUILD_CFLAGS += -maccumulate-outgoing-args
+        KBUILD_CFLAGS += $(call cc-option,-maccumulate-outgoing-args)
 endif
 
 ifdef CONFIG_CC_STACKPROTECTOR
--- linux.old/include/linux/rcupdate.h	2014-05-28 23:42:45.915048024 +0900
+++ linux/include/linux/rcupdate.h	2014-05-28 23:42:55.940270401 +0900
@@ -819,10 +819,10 @@
 {
 	typedef void (*rcu_callback)(struct rcu_head *);
 
-	BUILD_BUG_ON(!__builtin_constant_p(offset));
+//	BUILD_BUG_ON(!__builtin_constant_p(offset));
 
 	/* See the kfree_rcu() header comment. */
-	BUILD_BUG_ON(!__is_kfree_rcu_offset(offset));
+//	BUILD_BUG_ON(!__is_kfree_rcu_offset(offset));
 
 	call_rcu(head, (rcu_callback)offset);
 }
--- linux.old/Makefile	2014-05-29 00:52:03.555576955 +0900
+++ linux/Makefile	2014-05-29 00:52:28.842139879 +0900
@@ -368,10 +368,11 @@
 		   -fno-strict-aliasing -fno-common \
 		   -Werror-implicit-function-declaration \
 		   -Wno-format-security \
-		   -fno-delete-null-pointer-checks
+		   $(call cc-option,-fno-delete-null-pointer-checks,) \
+		   $(call cc-option,-no-integrated-as,)
 KBUILD_AFLAGS_KERNEL :=
 KBUILD_CFLAGS_KERNEL :=
-KBUILD_AFLAGS   := -D__ASSEMBLY__
+KBUILD_AFLAGS   := -D__ASSEMBLY__ $(call cc-option,-no-integrated-as,)
 KBUILD_AFLAGS_MODULE  := -DMODULE
 KBUILD_CFLAGS_MODULE  := -DMODULE
 KBUILD_LDFLAGS_MODULE := -T $(srctree)/scripts/module-common.lds

--- linux.old/Makefile	2014-05-31 19:45:09.769492494 +0900
+++ linux/Makefile	2014-05-31 19:44:23.113447833 +0900
@@ -313,8 +313,9 @@
 CPPFLAGS        := -D__KERNEL__ $(LINUXINCLUDE)
 
 CFLAGS          := -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs \
-                   -fno-strict-aliasing -fno-common
-AFLAGS          := -D__ASSEMBLY__
+                   -fno-strict-aliasing -fno-common \
+				   $(call cc-option,-no-integrated-as,)
+AFLAGS          := -D__ASSEMBLY__ $(call cc-option,-no-integrated-as,)
 
 # Read KERNELRELEASE from include/config/kernel.release (if it exists)
 KERNELRELEASE = $(shell cat include/config/kernel.release 2> /dev/null)
--- linux.old/arch/x86_64/Makefile	2014-05-31 20:01:01.079806903 +0900
+++ linux/arch/x86_64/Makefile	2014-05-31 20:01:41.636714612 +0900
@@ -43,7 +43,7 @@
 cflags-kernel-$(CONFIG_REORDER) += -ffunction-sections
 # this makes reading assembly source easier, but produces worse code
 # actually it makes the kernel smaller too.
-cflags-y += -fno-reorder-blocks
+cflags-y += $(call cc-option,-fno-reorder-blocks)
 cflags-y += -Wno-sign-compare
 cflags-y += -fno-asynchronous-unwind-tables
 ifneq ($(CONFIG_DEBUG_INFO),y)
@@ -58,7 +58,7 @@
 cflags-y += $(call cc-option,-mno-sse -mno-mmx -mno-sse2 -mno-3dnow,)
 # this works around some issues with generating unwind tables in older gccs
 # newer gccs do it by default
-cflags-y += -maccumulate-outgoing-args
+cflags-y += $(call cc-option,-maccumulate-outgoing-args)
 
 # do binutils support CFI?
 cflags-y += $(call as-instr,.cfi_startproc\n.cfi_endproc,-DCONFIG_AS_CFI=1,)
--- linux.old/scripts/mod/sumversion.c	2014-05-31 20:14:24.868825036 +0900
+++ linux/scripts/mod/sumversion.c	2014-05-31 20:14:45.657290296 +0900
@@ -8,6 +8,7 @@
 #include <errno.h>
 #include <string.h>
 #include "modpost.h"
+#include <limits.h>
 
 /*
  * Stolen form Cryptographic API.
